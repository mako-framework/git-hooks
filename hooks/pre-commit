#!/usr/bin/php
<?php

// php-cs-fixer rules

$rules =
[
	'no_trailing_whitespace',
	'no_whitespace_in_blank_line',
	'encoding',
	'single_blank_line_at_eof',
	'elseif',
	'blank_line_after_namespace',
	'blank_line_after_opening_tag',
	'cast_spaces',
	'hash_to_slash_comment',
	'lowercase_cast',
	'lowercase_constants',
	'lowercase_keywords',
	'no_alias_functions',
	'no_extra_consecutive_blank_lines',
	'no_leading_import_slash',
	'standardize_not_equals',
	'method_argument_space',
	'linebreak_after_opening_tag',
	'no_blank_lines_after_phpdoc',
	'no_leading_namespace_whitespace',
	'single_blank_line_before_namespace',
	'native_function_casing',
	'no_closing_tag',
	'no_singleline_whitespace_before_semicolons',
	'no_spaces_inside_parenthesis',
	'no_trailing_comma_in_list_call',
	'no_trailing_comma_in_singleline_array',
	'no_trailing_whitespace_in_comment',
	'no_whitespace_before_comma_in_array',
	'whitespace_after_comma_in_array',
	'trailing_comma_in_multiline_array',
	'object_operator_without_whitespace',
	'phpdoc_align',
	'ordered_imports',
	'single_line_after_imports',
	'single_import_per_statement',
	'no_unused_imports',
];

// Check if we have php-cs-fixer in the path and exit if we don't

$fixer = trim(shell_exec('which php-cs-fixer'));

if(empty($fixer))
{
	exit(1);
}

// Get the list of modified files and run PHP files through the php-cs-fixer

exec('git diff --cached --name-only --diff-filter=ACM', $output);

foreach($output as $file)
{
	if(file_exists($file) && pathinfo($file, PATHINFO_EXTENSION) === 'php')
	{
		exec($fixer . ' fix ' . $file . '--using-cache=no --allow-risky=yes --rules=' . implode(',', $rules));

		exec('git add ' . $file);
	}
}
